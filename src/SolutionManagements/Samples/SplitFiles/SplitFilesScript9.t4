<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>
<#@ include file="..\..\SolutionManagement.t4" #>

<# 

	System.Diagnostics.Debugger.Launch();

	// get a reference to solution
	NodeSolution sln = Solution();

	// get all object of type NodeItem (working file *.cs, *.vb, ...)
	List<NodeItem> list = sln.GetItem<NodeItem>().ToList();

	foreach(NodeItem item in list)
	{

		// parse the list of code objects from 
		foreach(InterfaceInfo cls in item.GetClassItems<InterfaceInfo>(c => c.IsGeneric))
		{
		
			WriteLine("interface : " + cls.FullName);
            foreach (GenericArgument gen in cls.GenericArguments)
            {

				Write("\twhere " + gen.Name + ":" );
		 
				if (gen.IsClass)
					WriteLine(" class");

				bool t = false;

                foreach (var cons in gen.Constraints)
                {
					if (t)
						Write(",");

					Write(" " + cons);

					t = true;
                }


				if (gen.HasEmptyConstructor)
                {
					if (t)
						Write(",");

					WriteLine(" new()");
                }

				WriteLine("");
            }
		}

	}


 #>